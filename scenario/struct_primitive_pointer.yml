input:
    input.go: |
        package structs

        // goverter:converter
        type Converter interface {
            Convert(source Input) Output
        }

        type Input struct {
            ID string
            Name string
            Age *int
        }
        type Output struct {
            ID *ID
            Name *string
            Age *int
        }

        type ID string
success: |
    // Code generated by github.com/rahimlis/go-converter, DO NOT EDIT.

    package generated

    import execution "github.com/rahimlis/go-converter/execution"

    type ConverterImpl struct{}

    func (c *ConverterImpl) Convert(source execution.Input) execution.Output {
    	var structsOutput execution.Output
    	pStructsID := execution.ID(source.ID)
    	structsOutput.ID = &pStructsID
    	pString := source.Name
    	structsOutput.Name = &pString
    	var pInt *int
    	if source.Age != nil {
    		xint := *source.Age
    		pInt = &xint
    	}
    	structsOutput.Age = pInt
    	return structsOutput
    }
