input:
    input.go: |
        package structs
        // goverter:converter
        type Converter interface {
            // goverter:mapExtend Age DefaultAge
            Convert(source *Input) *Output
        }
        type Input struct {
            Name string
            Score int
        }
        type Output struct {
            Name string
            Age int
        }
        func DefaultAge() int {
            return 42
        }
success: |
    // Code generated by github.com/rahimlis/go-converter, DO NOT EDIT.

    package generated

    import execution "github.com/rahimlis/go-converter/execution"

    type ConverterImpl struct{}

    func (c *ConverterImpl) Convert(source *execution.Input) *execution.Output {
    	var pStructsOutput *execution.Output
    	if source != nil {
    		var structsOutput execution.Output
    		structsOutput.Name = (*source).Name
    		structsOutput.Age = execution.DefaultAge()
    		pStructsOutput = &structsOutput
    	}
    	return pStructsOutput
    }
