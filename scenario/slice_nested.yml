input:
    input.go: |
        package slices

        // goverter:converter
        type Converter interface {
            Convert(source [][][]int) [][][]int
        }
success: |
    // Code generated by github.com/rahimlis/go-converter, DO NOT EDIT.

    package generated

    type ConverterImpl struct{}

    func (c *ConverterImpl) Convert(source [][][]int) [][][]int {
    	var intListListList [][][]int
    	if source != nil {
    		intListListList = make([][][]int, len(source))
    		for i := 0; i < len(source); i++ {
    			var intListList [][]int
    			if source[i] != nil {
    				intListList = make([][]int, len(source[i]))
    				for j := 0; j < len(source[i]); j++ {
    					var intList []int
    					if source[i][j] != nil {
    						intList = make([]int, len(source[i][j]))
    						for k := 0; k < len(source[i][j]); k++ {
    							intList[k] = source[i][j][k]
    						}
    					}
    					intListList[j] = intList
    				}
    			}
    			intListListList[i] = intListList
    		}
    	}
    	return intListListList
    }
