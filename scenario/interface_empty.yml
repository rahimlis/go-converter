input:
    input.go: |
        package structs

        // goverter:converter
        // goverter:extend ConvertInterface
        type Converter interface {
            Convert(source map[string]interface{}) map[string]interface{}
        }

        func ConvertInterface(x interface{}) interface{} {
            return nil
        }
success: |
    // Code generated by github.com/rahimlis/go-converter, DO NOT EDIT.

    package generated

    import execution "github.com/rahimlis/go-converter/execution"

    type ConverterImpl struct{}

    func (c *ConverterImpl) Convert(source map[string]interface{}) map[string]interface{} {
    	mapStringUnknown := make(map[string]interface{}, len(source))
    	for key, value := range source {
    		mapStringUnknown[key] = execution.ConvertInterface(value)
    	}
    	return mapStringUnknown
    }
