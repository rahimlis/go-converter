input:
    input.go: |
        package slices

        // goverter:converter
        type Converter interface {
            ConvertToP(source []int) []*int
            ConvertPToP(source []*int) []*int
        }
success: |
    // Code generated by github.com/rahimlis/go-converter, DO NOT EDIT.

    package generated

    type ConverterImpl struct{}

    func (c *ConverterImpl) ConvertPToP(source []*int) []*int {
    	var pIntList []*int
    	if source != nil {
    		pIntList = make([]*int, len(source))
    		for i := 0; i < len(source); i++ {
    			var pInt *int
    			if source[i] != nil {
    				xint := *source[i]
    				pInt = &xint
    			}
    			pIntList[i] = pInt
    		}
    	}
    	return pIntList
    }
    func (c *ConverterImpl) ConvertToP(source []int) []*int {
    	var pIntList []*int
    	if source != nil {
    		pIntList = make([]*int, len(source))
    		for i := 0; i < len(source); i++ {
    			pInt := source[i]
    			pIntList[i] = &pInt
    		}
    	}
    	return pIntList
    }
