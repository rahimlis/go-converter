input:
    input.go: |
        package structs

        // goverter:converter
        type Converter interface {
            // goverter:map . FullName | ToFullName
            ConvertPerson(source Person) APIPerson
        }

        type Person struct {
            FirstName string
            LastName  string
        }

        type APIPerson struct {
            FullName string
        }

        func ToFullName(input *Person) string {
            return input.FirstName + " " + input.LastName
        }
error: |-
    Error while creating converter method:
        func (github.com/rahimlis/go-converter/execution.Converter).ConvertPerson(source github.com/rahimlis/go-converter/execution.Person) github.com/rahimlis/go-converter/execution.APIPerson

    | github.com/rahimlis/go-converter/execution.Person
    |
    |      | goverter:map . FullName
    |      |
    |      |        | func github.com/rahimlis/go-converter/execution.ToFullName(input *github.com/rahimlis/go-converter/execution.Person) string
    |      |        |
    |      |        |          | *github.com/rahimlis/go-converter/execution.Person
    |      |        |          |
    source.        :ToFullName(source)
    target.FullName
    |      |
    |      |
    |      |
    |      |
    |      |
    |      | string
    |
    | github.com/rahimlis/go-converter/execution.APIPerson

    cannot not use
    	func github.com/rahimlis/go-converter/execution.ToFullName(input *github.com/rahimlis/go-converter/execution.Person) string
    because source type mismatch

    Extend method param type: *github.com/rahimlis/go-converter/execution.Person
    Converter source type: github.com/rahimlis/go-converter/execution.Person
